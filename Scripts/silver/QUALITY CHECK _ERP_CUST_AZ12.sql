-- CLEANING bronze.erp_CUST_AZ12
SELECT * FROM bronze.crm_cust_info
SELECT * FROM bronze.erp_CUST_AZ12;

--ISSUES-1
-- EXTRA 3 LETTER IN CID,REMOVING IT TO MATCH WITH cst_key in silver.crm_cust_info
SELECT  
CID ,
BDATE,
GEN
FROM bronze.erp_CUST_AZ12
WHERE CID LIKE 'AW00%' ;

-- DATA CLEANING
-- REMOVING NAS FROM CID
SELECT  
CASE WHEN CID LIKE 'NAS%' THEN SUBSTRING( CID,4,LEN(CID))
	 ELSE CID 
	END AS CID,
BDATE,
GEN
FROM bronze.erp_CUST_AZ12;

-- CHECK IT WITH  silver.crm_cust_info

SELECT  
CID,
CASE WHEN CID LIKE 'NAS%' THEN SUBSTRING( CID,4,LEN(CID))
	 ELSE CID 
	END AS NEW_CID
FROM bronze.erp_CUST_AZ12
WHERE CASE WHEN CID LIKE 'NAS%' THEN SUBSTRING( CID,4,LEN(CID))
	 ELSE CID 
	END  NOT IN ( SELECT cst_key FROM silver.crm_cust_info)  ;

-- RESULT : REMOVED THE NAS FROM CID

--ISSUE CHECK -2
-- INVALID DATE

SELECT  DISTINCT
CID ,
 BDATE,
GEN
FROM bronze.erp_CUST_AZ12
WHERE BDATE> GETDATE()OR  BDATE < '1930-01-01'  
ORDER BY BDATE;--
-- RESULT :PEOPLE FROM FUTURE DATE AVILABLE IS ILOGICAL
--CLEANING DATE
-- THE DATA WHICH IS 100% CORRECT
SELECT BDATE,
CASE WHEN  BDATE> GETDATE() THEN NULL
	ELSE BDATE
END AS NEW_BDATE
FROM bronze.erp_CUST_AZ12
ORDER BY NEW_BDATE;

--RESULT:DATA CLEANED

--ISSUE -3 
-- CHECKING DATA QUALITY IN GEN

SELECT DISTINCT GEN
FROM bronze.erp_CUST_AZ12;

--RESULT:6 RECORDS FOUND
-- REPLACING IT WITH MALE ,FEMALE,NOT AVILABLE

SELECT DISTINCT GEN,
CASE WHEN UPPER (TRIM (GEN)) IN ('M' , 'Male') THEN 'MALE'
	 WHEN UPPER (TRIM (GEN)) IN('F' , 'Female') THEN 'FEMALE'
	 ELSE 'NOT AVILABLE'
END AS GEN
FROM bronze.erp_CUST_AZ12;

--RESULT:DATA CLEANED
   

 --CHECKING DATA ISSUE WITH silver.erp_CUST_AZ12

 SELECT * FROM silver.erp_CUST_AZ12
 WHERE CID LIKE 'NAS%';

 -- RESULT: NO FOUND

 SELECT * FROM silver.erp_CUST_AZ12
 WHERE BDATE >GETDATE();
  -- RESULT: NO FOUND
  SELECT DISTINCT GEN FROM silver.erp_CUST_AZ12;
  -- RESULT : CLEANED